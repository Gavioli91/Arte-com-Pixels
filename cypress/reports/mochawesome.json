{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 24,
    "pending": 0,
    "failures": 17,
    "start": "2022-05-28T22:50:54.873Z",
    "end": "2022-05-28T22:52:53.416Z",
    "duration": 118543,
    "testsRegistered": 41,
    "passPercent": 58.536585365853654,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "be633a57-7dd8-4a4c-99c3-738fe5d15da7",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bddcb886-438b-4474-bffa-5b9e16c22507",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 884,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "70c823d2-9e05-4239-9c8e-4d3b3137a46e",
              "parentUUID": "bddcb886-438b-4474-bffa-5b9e16c22507",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "70c823d2-9e05-4239-9c8e-4d3b3137a46e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 884,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eee8e04e-7b9a-4e07-921e-a219643a972c",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 616,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "d41548f9-a675-4ec0-9fa8-f33844ae16e1",
              "parentUUID": "eee8e04e-7b9a-4e07-921e-a219643a972c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 573,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "f264da22-07af-4a2c-aacc-42b0703c972c",
              "parentUUID": "eee8e04e-7b9a-4e07-921e-a219643a972c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 478,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "015439c6-a1c9-4c7b-9632-b4b52add6b6d",
              "parentUUID": "eee8e04e-7b9a-4e07-921e-a219643a972c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 406,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "eefccd5d-2655-459c-af0b-d5740b6997ba",
              "parentUUID": "eee8e04e-7b9a-4e07-921e-a219643a972c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 350,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "b785d19a-e39b-44a0-8b08-ba5cb3b71788",
              "parentUUID": "eee8e04e-7b9a-4e07-921e-a219643a972c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 388,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "f9fe5e21-f89b-4cb6-9ce8-73a0145fe3bc",
              "parentUUID": "eee8e04e-7b9a-4e07-921e-a219643a972c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 376,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "35e756ea-a2ef-4843-8216-95a0e6e5ec49",
              "parentUUID": "eee8e04e-7b9a-4e07-921e-a219643a972c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d41548f9-a675-4ec0-9fa8-f33844ae16e1",
            "f264da22-07af-4a2c-aacc-42b0703c972c",
            "015439c6-a1c9-4c7b-9632-b4b52add6b6d",
            "eefccd5d-2655-459c-af0b-d5740b6997ba",
            "b785d19a-e39b-44a0-8b08-ba5cb3b71788",
            "f9fe5e21-f89b-4cb6-9ce8-73a0145fe3bc",
            "35e756ea-a2ef-4843-8216-95a0e6e5ec49"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3187,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8731d284-23bf-4be0-9e0d-76ea7a45fa53",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 395,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "3b20d908-c590-4296-814c-d213e489593a",
              "parentUUID": "8731d284-23bf-4be0-9e0d-76ea7a45fa53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 710,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "975927ae-556f-4a98-8ca7-56315191d7fb",
              "parentUUID": "8731d284-23bf-4be0-9e0d-76ea7a45fa53",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b20d908-c590-4296-814c-d213e489593a",
            "975927ae-556f-4a98-8ca7-56315191d7fb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1105,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b2ee44ba-c9f5-489a-ab06-bf19a65472cb",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 430,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "06e7bb39-8f47-4b09-9f3a-7344d9ef67be",
              "parentUUID": "b2ee44ba-c9f5-489a-ab06-bf19a65472cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 441,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "6de69718-afd4-4c51-b3b3-af70e9590509",
              "parentUUID": "b2ee44ba-c9f5-489a-ab06-bf19a65472cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 639,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "4af05e0b-27ca-48c7-9064-d0fa90783d67",
              "parentUUID": "b2ee44ba-c9f5-489a-ab06-bf19a65472cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 356,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "acd3ffc3-a98c-421b-bac1-32f7f09b3d46",
              "parentUUID": "b2ee44ba-c9f5-489a-ab06-bf19a65472cb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "06e7bb39-8f47-4b09-9f3a-7344d9ef67be",
            "6de69718-afd4-4c51-b3b3-af70e9590509",
            "4af05e0b-27ca-48c7-9064-d0fa90783d67",
            "acd3ffc3-a98c-421b-bac1-32f7f09b3d46"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1866,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bed98792-3191-4523-9793-c0b17a879ffa",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 946,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "61956336-e7b0-4e63-82a4-241c0eb91740",
              "parentUUID": "bed98792-3191-4523-9793-c0b17a879ffa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 843,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "cef4b3c9-32d9-4069-b443-500f351f196b",
              "parentUUID": "bed98792-3191-4523-9793-c0b17a879ffa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "61956336-e7b0-4e63-82a4-241c0eb91740",
            "cef4b3c9-32d9-4069-b443-500f351f196b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1789,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d6efeece-5aac-4e3d-ab69-430442d6d511",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 232,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "bbd28a3e-fa40-4ab0-80a9-bef1ff616d6b",
              "parentUUID": "d6efeece-5aac-4e3d-ab69-430442d6d511",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 362,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "d21a9402-485b-40f3-b84c-ef6434e86954",
              "parentUUID": "d6efeece-5aac-4e3d-ab69-430442d6d511",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bbd28a3e-fa40-4ab0-80a9-bef1ff616d6b",
            "d21a9402-485b-40f3-b84c-ef6434e86954"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 594,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4d380040-39b7-476e-9b0a-c4e4996ee054",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 896,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "0f85c045-428b-4dfb-979a-ac266defe5f7",
              "parentUUID": "4d380040-39b7-476e-9b0a-c4e4996ee054",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 10709,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "a0ccdd35-e116-4af6-956f-fd1288dca259",
              "parentUUID": "4d380040-39b7-476e-9b0a-c4e4996ee054",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0f85c045-428b-4dfb-979a-ac266defe5f7",
            "a0ccdd35-e116-4af6-956f-fd1288dca259"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11605,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d91e971f-b1d3-4f23-8b1c-6668ec35eee7",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2881,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "db569715-efa1-4cb6-a58f-0a1fa03d2d67",
              "parentUUID": "d91e971f-b1d3-4f23-8b1c-6668ec35eee7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 10267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "0f45f332-eb93-4ecf-900d-d36b75c7760b",
              "parentUUID": "d91e971f-b1d3-4f23-8b1c-6668ec35eee7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2505,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "c50c17c4-bac4-4b2a-a0d4-a7bf4bfeccb9",
              "parentUUID": "d91e971f-b1d3-4f23-8b1c-6668ec35eee7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db569715-efa1-4cb6-a58f-0a1fa03d2d67",
            "0f45f332-eb93-4ecf-900d-d36b75c7760b",
            "c50c17c4-bac4-4b2a-a0d4-a7bf4bfeccb9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15653,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d0f24a67-fb3f-4e59-bf2f-3a8dd8a2c775",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 4915,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<section#clear-board>' to be 'visible'\n\nThis element '<section#clear-board>' is not visible because it has an effective width and height of: '1366 x 0' pixels.",
                "estack": "CypressError: Timed out retrying: expected '<section#clear-board>' to be 'visible'\n\nThis element '<section#clear-board>' is not visible because it has an effective width and height of: '1366 x 0' pixels.\n    at cypressErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "62cd3a6c-6fd6-4fad-8658-dcc5a750cad9",
              "parentUUID": "d0f24a67-fb3f-4e59-bf2f-3a8dd8a2c775",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 541,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "4c242600-b371-4a2d-b7d9-7a142d46fc8f",
              "parentUUID": "d0f24a67-fb3f-4e59-bf2f-3a8dd8a2c775",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 4617,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<section#clear-board>' to contain text 'Limpar', but the text was ''",
                "estack": "CypressError: Timed out retrying: expected '<section#clear-board>' to contain text 'Limpar', but the text was ''\n    at cypressErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4f4e8838-5155-468b-ad85-65bcf2439911",
              "parentUUID": "d0f24a67-fb3f-4e59-bf2f-3a8dd8a2c775",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 7277,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: cy.click() failed because this element is not visible:\n\n<section id=\"clear-board\"></section>\n\nThis element '<section#clear-board>' is not visible because it has an effective width and height of: '1366 x 0' pixels.\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying: cy.click() failed because this element is not visible:\n\n<section id=\"clear-board\"></section>\n\nThis element '<section#clear-board>' is not visible because it has an effective width and height of: '1366 x 0' pixels.\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at cypressErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35781/__cypress/runner/cypress_runner.js:149915:3)\n    at Object.retry (http://localhost:35781/__cypress/runner/cypress_runner.js:144197:19)\n    at retryActionability (http://localhost:35781/__cypress/runner/cypress_runner.js:132052:19)\n    at tryCatcher (http://localhost:35781/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:35781/__cypress/runner/cypress_runner.js:164690:29)\n    at tryFn (http://localhost:35781/__cypress/runner/cypress_runner.js:144661:21)\n    at whenStable (http://localhost:35781/__cypress/runner/cypress_runner.js:144696:12)\n    at http://localhost:35781/__cypress/runner/cypress_runner.js:144240:16\n    at tryCatcher (http://localhost:35781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35781/__cypress/runner/cypress_runner.js:165532:18)\n    at Promise._fulfill (http://localhost:35781/__cypress/runner/cypress_runner.js:165477:18)",
                "diff": null
              },
              "uuid": "cbe32866-3552-4d78-abde-df7cd6aa7394",
              "parentUUID": "d0f24a67-fb3f-4e59-bf2f-3a8dd8a2c775",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4c242600-b371-4a2d-b7d9-7a142d46fc8f"
          ],
          "failures": [
            "62cd3a6c-6fd6-4fad-8658-dcc5a750cad9",
            "4f4e8838-5155-468b-ad85-65bcf2439911",
            "cbe32866-3552-4d78-abde-df7cd6aa7394"
          ],
          "pending": [],
          "skipped": [],
          "duration": 17350,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e1c4c390-59c3-42c9-8538-72015e02f8b2",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4814,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c834f3de-070b-40fd-9eb5-06dbb7f269f6",
              "parentUUID": "e1c4c390-59c3-42c9-8538-72015e02f8b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 5053,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "51439518-0b21-474d-8a3f-74550207ec03",
              "parentUUID": "e1c4c390-59c3-42c9-8538-72015e02f8b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4878,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e6786640-806b-449d-b3f1-b2b9f81cf37d",
              "parentUUID": "e1c4c390-59c3-42c9-8538-72015e02f8b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4905,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f4184595-583d-41b4-8b33-8ba0ccbf42e7",
              "parentUUID": "e1c4c390-59c3-42c9-8538-72015e02f8b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4804,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4aa39de0-64de-43e0-bb9c-56ec34930f62",
              "parentUUID": "e1c4c390-59c3-42c9-8538-72015e02f8b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 5049,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e962b283-6def-4909-a408-fe9e2886dede",
              "parentUUID": "e1c4c390-59c3-42c9-8538-72015e02f8b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4916,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9b1f7884-8071-4bf4-8bde-5f0a62595000",
              "parentUUID": "e1c4c390-59c3-42c9-8538-72015e02f8b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4751,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9cdfb8e7-72d9-4a94-af14-07b0bb276490",
              "parentUUID": "e1c4c390-59c3-42c9-8538-72015e02f8b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4888,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5d652bf2-4821-429c-b651-9d64485de183",
              "parentUUID": "e1c4c390-59c3-42c9-8538-72015e02f8b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c834f3de-070b-40fd-9eb5-06dbb7f269f6",
            "51439518-0b21-474d-8a3f-74550207ec03",
            "e6786640-806b-449d-b3f1-b2b9f81cf37d",
            "f4184595-583d-41b4-8b33-8ba0ccbf42e7",
            "4aa39de0-64de-43e0-bb9c-56ec34930f62",
            "e962b283-6def-4909-a408-fe9e2886dede",
            "9b1f7884-8071-4bf4-8bde-5f0a62595000",
            "9cdfb8e7-72d9-4a94-af14-07b0bb276490",
            "5d652bf2-4821-429c-b651-9d64485de183"
          ],
          "pending": [],
          "skipped": [],
          "duration": 44058,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5a74cc02-138c-4c25-b702-98f2cdf264bb",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 5096,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "695a010f-c277-4c2f-a608-cf21530799d4",
              "parentUUID": "5a74cc02-138c-4c25-b702-98f2cdf264bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4810,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "30b85c83-41eb-4791-9768-9eecf7e6fc26",
              "parentUUID": "5a74cc02-138c-4c25-b702-98f2cdf264bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4963,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b9afd854-5384-45c1-be8d-a0c213f7f693",
              "parentUUID": "5a74cc02-138c-4c25-b702-98f2cdf264bb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "695a010f-c277-4c2f-a608-cf21530799d4",
            "30b85c83-41eb-4791-9768-9eecf7e6fc26",
            "b9afd854-5384-45c1-be8d-a0c213f7f693"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14869,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "14f025a4-473c-4635-930c-52ebe28f868b",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 949,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:35781/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:35781/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:35781/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:35781/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:35781/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:35781/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:35781/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:35781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:35781/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35781/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "25b4a1e5-0c32-4fe6-841d-7ebf32dac37c",
              "parentUUID": "14f025a4-473c-4635-930c-52ebe28f868b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 1075,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:35781/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:35781/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:35781/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:35781/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:35781/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:35781/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:35781/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:35781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:35781/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35781/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "c5046165-4134-4748-9020-02a733b50a14",
              "parentUUID": "14f025a4-473c-4635-930c-52ebe28f868b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "25b4a1e5-0c32-4fe6-841d-7ebf32dac37c",
            "c5046165-4134-4748-9020-02a733b50a14"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2024,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}