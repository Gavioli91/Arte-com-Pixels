{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-05-29T02:03:28.032Z",
    "end": "2022-05-29T02:05:21.939Z",
    "duration": 113907,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b74c6d9c-143f-4393-a01e-50f8c6c92e30",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "df014910-ceb5-4e08-b2e9-d784bd3e44eb",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 2493,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "f79ff05c-0422-4333-ab03-f32a58ebd7a9",
              "parentUUID": "df014910-ceb5-4e08-b2e9-d784bd3e44eb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f79ff05c-0422-4333-ab03-f32a58ebd7a9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2493,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "27953b0c-df6b-4e92-916f-55c9598ffa92",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 1626,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "342531d2-b903-4e0d-857b-ae0d72a3d347",
              "parentUUID": "27953b0c-df6b-4e92-916f-55c9598ffa92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 1056,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "40dbbaf2-3b6c-4de8-904d-f27460d1bc48",
              "parentUUID": "27953b0c-df6b-4e92-916f-55c9598ffa92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 681,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "0b3f72d2-89ac-4b3e-bfe8-2b614e1510fd",
              "parentUUID": "27953b0c-df6b-4e92-916f-55c9598ffa92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 668,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "022947a4-7fba-420c-a58b-75d6f398db0f",
              "parentUUID": "27953b0c-df6b-4e92-916f-55c9598ffa92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 486,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "3d7947d1-4890-431e-a4af-89fbfea8b77b",
              "parentUUID": "27953b0c-df6b-4e92-916f-55c9598ffa92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 529,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "8d40c719-3d9a-4494-8687-3ee1a19cc577",
              "parentUUID": "27953b0c-df6b-4e92-916f-55c9598ffa92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 428,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "72b69363-28a5-41cd-8745-1f139e0c0ce3",
              "parentUUID": "27953b0c-df6b-4e92-916f-55c9598ffa92",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "342531d2-b903-4e0d-857b-ae0d72a3d347",
            "40dbbaf2-3b6c-4de8-904d-f27460d1bc48",
            "0b3f72d2-89ac-4b3e-bfe8-2b614e1510fd",
            "022947a4-7fba-420c-a58b-75d6f398db0f",
            "3d7947d1-4890-431e-a4af-89fbfea8b77b",
            "8d40c719-3d9a-4494-8687-3ee1a19cc577",
            "72b69363-28a5-41cd-8745-1f139e0c0ce3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5474,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8d1e2582-ff35-4e81-a6e1-46c59c88879f",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 474,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "2cd39462-cac7-4557-aa35-3501fa99f2e2",
              "parentUUID": "8d1e2582-ff35-4e81-a6e1-46c59c88879f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 691,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "a01dbae3-735b-4819-a1df-77e18a285833",
              "parentUUID": "8d1e2582-ff35-4e81-a6e1-46c59c88879f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2cd39462-cac7-4557-aa35-3501fa99f2e2",
            "a01dbae3-735b-4819-a1df-77e18a285833"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1165,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2fe27188-e75d-4ecc-930b-dc6626dc8b0c",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 559,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "6ae01250-97df-4503-aa5b-9fbc54d976f5",
              "parentUUID": "2fe27188-e75d-4ecc-930b-dc6626dc8b0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 625,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "531d35e5-6ea0-4d2c-ab3b-35ec07bc08b6",
              "parentUUID": "2fe27188-e75d-4ecc-930b-dc6626dc8b0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 785,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "e9e2809c-43ae-4081-ade4-e0b8fb5220c6",
              "parentUUID": "2fe27188-e75d-4ecc-930b-dc6626dc8b0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 581,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "11fdbdfc-065b-4241-94bb-91640210f70c",
              "parentUUID": "2fe27188-e75d-4ecc-930b-dc6626dc8b0c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6ae01250-97df-4503-aa5b-9fbc54d976f5",
            "531d35e5-6ea0-4d2c-ab3b-35ec07bc08b6",
            "e9e2809c-43ae-4081-ade4-e0b8fb5220c6",
            "11fdbdfc-065b-4241-94bb-91640210f70c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2550,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f7501ec7-3fef-4172-a464-0c9f390e334e",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 1193,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "5b78bf62-592f-45b6-b078-3aa04caf34a8",
              "parentUUID": "f7501ec7-3fef-4172-a464-0c9f390e334e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 953,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "7aaf772f-3ebf-4f56-849f-83aef9d7ecf7",
              "parentUUID": "f7501ec7-3fef-4172-a464-0c9f390e334e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5b78bf62-592f-45b6-b078-3aa04caf34a8",
            "7aaf772f-3ebf-4f56-849f-83aef9d7ecf7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2146,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "527b0b2f-27f1-4ba9-8d4c-d712391bdc74",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 435,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "5df18422-879a-4e3f-9462-e57e20b9fd68",
              "parentUUID": "527b0b2f-27f1-4ba9-8d4c-d712391bdc74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 613,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "ce3c4494-7f20-4aa1-80ea-bac26693d1d7",
              "parentUUID": "527b0b2f-27f1-4ba9-8d4c-d712391bdc74",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5df18422-879a-4e3f-9462-e57e20b9fd68",
            "ce3c4494-7f20-4aa1-80ea-bac26693d1d7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1048,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1c4c4037-ca4b-47d3-bf30-b9147e17238c",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 1195,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "87c65aea-78d8-4f9f-9645-a860de6d66af",
              "parentUUID": "1c4c4037-ca4b-47d3-bf30-b9147e17238c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 10934,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "ffbf4f56-51dc-4bd3-b075-2815e5d45bcc",
              "parentUUID": "1c4c4037-ca4b-47d3-bf30-b9147e17238c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "87c65aea-78d8-4f9f-9645-a860de6d66af",
            "ffbf4f56-51dc-4bd3-b075-2815e5d45bcc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12129,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a20a642d-d4c9-4752-b7e9-4a1b8f03e8f7",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 3207,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "b16a1e0e-b535-4bce-aa76-288173f5a4b8",
              "parentUUID": "a20a642d-d4c9-4752-b7e9-4a1b8f03e8f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 10533,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "03b8cf6d-5655-4dfe-8442-a599aef9781c",
              "parentUUID": "a20a642d-d4c9-4752-b7e9-4a1b8f03e8f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2977,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "d8b15242-f901-4229-9a9f-187dccaa769d",
              "parentUUID": "a20a642d-d4c9-4752-b7e9-4a1b8f03e8f7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b16a1e0e-b535-4bce-aa76-288173f5a4b8",
            "03b8cf6d-5655-4dfe-8442-a599aef9781c",
            "d8b15242-f901-4229-9a9f-187dccaa769d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16717,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5045b095-1730-4294-bcca-1927ba7c5907",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 561,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "903b852c-4469-4e31-abfa-fb08cd44f557",
              "parentUUID": "5045b095-1730-4294-bcca-1927ba7c5907",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 306,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "147f115d-d49d-4262-b04b-828839171f5c",
              "parentUUID": "5045b095-1730-4294-bcca-1927ba7c5907",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 646,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "17d37994-4dd7-4b1f-8545-e082f8c508a6",
              "parentUUID": "5045b095-1730-4294-bcca-1927ba7c5907",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 3766,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "2b0ce28a-0229-48fd-923a-4d23d7849fc3",
              "parentUUID": "5045b095-1730-4294-bcca-1927ba7c5907",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "903b852c-4469-4e31-abfa-fb08cd44f557",
            "147f115d-d49d-4262-b04b-828839171f5c",
            "17d37994-4dd7-4b1f-8545-e082f8c508a6",
            "2b0ce28a-0229-48fd-923a-4d23d7849fc3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5279,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dbe77810-a2ec-4073-8a65-96a204eb5809",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 5110,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34175/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34175/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34175/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34175/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34175/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34175/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34175/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34175/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34175/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34175/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34175/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ace986a9-98db-4918-a058-6189c479dc50",
              "parentUUID": "dbe77810-a2ec-4073-8a65-96a204eb5809",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4890,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34175/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34175/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34175/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34175/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34175/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34175/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34175/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34175/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34175/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34175/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34175/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "33307ec8-f4c2-44c9-8f41-6fa82af1172b",
              "parentUUID": "dbe77810-a2ec-4073-8a65-96a204eb5809",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4837,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:34175/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34175/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34175/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34175/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34175/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34175/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34175/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34175/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34175/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34175/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34175/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "36c36a6c-ed3f-473f-aa0f-83c79accfef1",
              "parentUUID": "dbe77810-a2ec-4073-8a65-96a204eb5809",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4826,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34175/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34175/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34175/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34175/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34175/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34175/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34175/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34175/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34175/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34175/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34175/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4785b709-7037-4533-8d73-2a27f4b2c59d",
              "parentUUID": "dbe77810-a2ec-4073-8a65-96a204eb5809",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 5083,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34175/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34175/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34175/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34175/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34175/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34175/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34175/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34175/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34175/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34175/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34175/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7cdf1f27-9117-411d-b83a-d48d0a089201",
              "parentUUID": "dbe77810-a2ec-4073-8a65-96a204eb5809",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4993,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34175/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34175/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34175/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34175/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34175/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34175/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34175/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34175/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34175/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34175/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34175/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "848b485b-a00a-463d-a69c-d64c1589e885",
              "parentUUID": "dbe77810-a2ec-4073-8a65-96a204eb5809",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4963,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34175/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34175/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34175/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34175/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34175/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34175/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34175/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34175/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34175/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34175/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34175/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fd2e9c49-2143-400e-a7fb-97189e7c3a92",
              "parentUUID": "dbe77810-a2ec-4073-8a65-96a204eb5809",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4953,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34175/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34175/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34175/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34175/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34175/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34175/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34175/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34175/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34175/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34175/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34175/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8065043f-86e7-4ba3-b248-cf647a017ee2",
              "parentUUID": "dbe77810-a2ec-4073-8a65-96a204eb5809",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4964,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34175/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34175/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34175/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34175/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34175/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34175/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34175/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34175/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34175/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34175/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34175/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e84f9b00-f444-45dd-8c2a-4f34220fbef1",
              "parentUUID": "dbe77810-a2ec-4073-8a65-96a204eb5809",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ace986a9-98db-4918-a058-6189c479dc50",
            "33307ec8-f4c2-44c9-8f41-6fa82af1172b",
            "36c36a6c-ed3f-473f-aa0f-83c79accfef1",
            "4785b709-7037-4533-8d73-2a27f4b2c59d",
            "7cdf1f27-9117-411d-b83a-d48d0a089201",
            "848b485b-a00a-463d-a69c-d64c1589e885",
            "fd2e9c49-2143-400e-a7fb-97189e7c3a92",
            "8065043f-86e7-4ba3-b248-cf647a017ee2",
            "e84f9b00-f444-45dd-8c2a-4f34220fbef1"
          ],
          "pending": [],
          "skipped": [],
          "duration": 44619,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d2e57ab0-4918-402c-b15f-f17ab4d4b19b",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 5106,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34175/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34175/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34175/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34175/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34175/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34175/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34175/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34175/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34175/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34175/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34175/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4af30474-e2ba-49f5-8d5f-b3bb40c245ec",
              "parentUUID": "d2e57ab0-4918-402c-b15f-f17ab4d4b19b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4750,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34175/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34175/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34175/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34175/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34175/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34175/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34175/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34175/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34175/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34175/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34175/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7eed66fb-9de5-4cf0-b0ef-652314ab0efb",
              "parentUUID": "d2e57ab0-4918-402c-b15f-f17ab4d4b19b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 5434,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34175/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34175/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34175/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34175/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34175/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34175/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34175/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34175/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34175/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34175/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34175/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6977eebe-5a32-4f40-a92c-973739221cb4",
              "parentUUID": "d2e57ab0-4918-402c-b15f-f17ab4d4b19b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4af30474-e2ba-49f5-8d5f-b3bb40c245ec",
            "7eed66fb-9de5-4cf0-b0ef-652314ab0efb",
            "6977eebe-5a32-4f40-a92c-973739221cb4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 15290,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bc171f47-7861-4689-8e36-15bc98cf5f72",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 1318,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34175/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34175/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34175/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34175/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34175/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34175/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34175/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34175/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34175/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34175/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34175/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34175/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "0c4427df-7f74-4ee1-a465-e4441783d35a",
              "parentUUID": "bc171f47-7861-4689-8e36-15bc98cf5f72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 907,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34175/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34175/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34175/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34175/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34175/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34175/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34175/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34175/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34175/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34175/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34175/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34175/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34175/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "40a45ae3-6eda-4e40-9a33-9025d49431cf",
              "parentUUID": "bc171f47-7861-4689-8e36-15bc98cf5f72",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0c4427df-7f74-4ee1-a465-e4441783d35a",
            "40a45ae3-6eda-4e40-9a33-9025d49431cf"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2225,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}